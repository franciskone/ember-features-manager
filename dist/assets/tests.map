{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","ember-features-manager/tests/integration/components/feature-wrapper-test.js","ember-features-manager/tests/lint/app.lint-test.js","ember-features-manager/tests/lint/templates.template.lint-test.js","ember-features-manager/tests/lint/tests.lint-test.js","ember-features-manager/tests/test-helper.js","ember-features-manager/tests/unit/routes/application-test.js","ember-features-manager/tests/unit/routes/page-a-test.js","ember-features-manager/tests/unit/routes/page-b-test.js","ember-features-manager/tests/unit/routes/page-c-test.js","ember-features-manager/tests/unit/utils/feature-flags-test.js","vendor/ember-cli/app-config.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define(\"ember-features-manager/tests/integration/components/feature-wrapper-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  (0, _qunit.module)('Integration | Component | feature-wrapper', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', async function (assert) {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.set('myAction', function(val) { ... });\n      await (0, _testHelpers.render)(Ember.HTMLBars.template({\n        \"id\": \"ByN5+hRd\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[21,\\\"feature-wrapper\\\"],false]],\\\"hasEval\\\":false}\",\n        \"meta\": {}\n      }));\n      assert.equal(this.element.textContent.trim(), ''); // Template block usage:\n\n      await (0, _testHelpers.render)(Ember.HTMLBars.template({\n        \"id\": \"9vwJpD3G\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n\\\"],[4,\\\"feature-wrapper\\\",null,null,{\\\"statements\\\":[[0,\\\"        template block text\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"]],\\\"hasEval\\\":false}\",\n        \"meta\": {}\n      }));\n      assert.equal(this.element.textContent.trim(), 'template block text');\n    });\n  });\n});","define(\"ember-features-manager/tests/lint/app.lint-test\", [], function () {\n  \"use strict\";\n});","define(\"ember-features-manager/tests/lint/templates.template.lint-test\", [], function () {\n  \"use strict\";\n\n  QUnit.module('TemplateLint');\n  QUnit.test('ember-features-manager/templates/application.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'ember-features-manager/templates/application.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('ember-features-manager/templates/components/feature-wrapper.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'ember-features-manager/templates/components/feature-wrapper.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('ember-features-manager/templates/page-a.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'ember-features-manager/templates/page-a.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('ember-features-manager/templates/page-b.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'ember-features-manager/templates/page-b.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('ember-features-manager/templates/page-c.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'ember-features-manager/templates/page-c.hbs should pass TemplateLint.\\n\\n');\n  });\n});","define(\"ember-features-manager/tests/lint/tests.lint-test\", [], function () {\n  \"use strict\";\n});","define(\"ember-features-manager/tests/test-helper\", [\"ember-features-manager/app\", \"ember-features-manager/config/environment\", \"@ember/test-helpers\", \"ember-qunit\"], function (_app, _environment, _testHelpers, _emberQunit) {\n  \"use strict\";\n\n  (0, _testHelpers.setApplication)(_app.default.create(_environment.default.APP));\n  (0, _emberQunit.start)();\n});","define(\"ember-features-manager/tests/unit/routes/application-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | application', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:application');\n      assert.ok(route);\n    });\n  });\n});","define(\"ember-features-manager/tests/unit/routes/page-a-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | page-a', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:page-a');\n      assert.ok(route);\n    });\n  });\n});","define(\"ember-features-manager/tests/unit/routes/page-b-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | page-b', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:page-b');\n      assert.ok(route);\n    });\n  });\n});","define(\"ember-features-manager/tests/unit/routes/page-c-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | page-c', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:page-c');\n      assert.ok(route);\n    });\n  });\n});","define(\"ember-features-manager/tests/unit/utils/feature-flags-test\", [\"ember-features-manager/utils/feature-flags\", \"qunit\"], function (_featureFlags, _qunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Utility | feature-flags', function () {\n    // Replace this with your real tests.\n    (0, _qunit.test)('it works', function (assert) {\n      let result = (0, _featureFlags.default)();\n      assert.ok(result);\n    });\n  });\n});","define('ember-features-manager/config/environment', [], function() {\n  var prefix = 'ember-features-manager';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(decodeURIComponent(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","require('ember-features-manager/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;;ACDA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;","file":"tests.js"}